{
  "input_model": {
    "type": "PyTorchModel",
    "model_path": "microsoft/llmlingua-2-bert-base-multilingual-cased-meetingbank",
    "io_config": {
      "input_names": [
        "input_ids",
        "attention_mask",
        "token_type_ids",
        "position_ids"
      ],
      "input_shapes": [
        [1, 512],
        [1, 1, 512, 512],
        [1, 512],
        [1, 512]
      ],
      "input_types": ["int64", "float32", "int64", "int64"],
      "output_names": ["logits"],
      "output_shapes": [[1, 512, 2]],
      "output_types": ["float32"],
      "dynamic_axes": {
        "input_ids": { "0": "batch_size", "1": "sequence_length" },
        "attention_mask": {
          "0": "batch_size",
          "2": "sequence_length",
          "3": "sequence_length"
        },
        "token_type_ids": { "0": "batch_size", "1": "sequence_length" },
        "position_ids": { "0": "batch_size", "1": "sequence_length" },
        "logits": { "0": "batch_size" }
      }
    },
    "model_loader": "load_llmlingua2_bert_model",
    "model_script": "llmlingua2_bert_qdq_npu_meetingbank.py"
  },
  "engine": {
    "host": "host_system",
    "target": "target_system",
    "cache_dir": "temp/cache",
    "clean_cache": true,
    "clean_evaluation_cache": true,
    "evaluator": "common_evaluator",
    "evaluate_input_model": false,
    "output_dir": "outputs/microsoft/llmlingua2_bert_base_multilingual_cased"
  },
  "systems": {
    "host_system": {
      "type": "LocalSystem",
      "accelerators": [
        { "device": "cpu", "execution_providers": ["CPUExecutionProvider"] }
      ]
    },
    "target_system": {
      "type": "LocalSystem",
      "accelerators": [
        { "device": "npu", "execution_providers": ["QNNExecutionProvider"] }
      ]
    }
  },
  "data_configs": [
    {
      "name": "calibration_data",
      "user_script": "llmlingua2_bert_qdq_npu_meetingbank.py",
      "script_dir": ".",
      "load_dataset_config": {
        "type": "load_meetingbank_data",
        "data_path": "data/llmlingua2_bert_base_multilingual_cased_meetingbank_tokens.npz",
        "model_name": "microsoft/llmlingua-2-bert-base-multilingual-cased-meetingbank",
        "max_samples": 4,
        "input_cols": ["prompts"],
        "label_col": "logits",
        "seq_length": 512
      },
      "dataloader_config": {
        "batch_size": 1
      }
    },
    {
      "name": "eval_data",
      "user_script": "llmlingua2_bert_qdq_npu_meetingbank.py",
      "load_dataset_config": {
        "type": "load_meetingbank_data",
        "data_path": "data/llmlingua2_bert_base_multilingual_cased_meetingbank_tokens.npz",
        "model_name": "microsoft/llmlingua-2-bert-base-multilingual-cased-meetingbank",
        "max_samples": 100,
        "input_cols": ["prompts"],
        "label_col": "logits",
        "seq_length": 512
      },
      "post_process_data_config": {
        "type": "bert_tcl_post_process"
      },
      "dataloader_config": {
        "batch_size": 1
      }
    }
  ],
  "evaluators": {
    "common_evaluator": {
      "metrics": [
        {
          "name": "quality",
          "type": "custom",
          "data_config": "eval_data",
          "sub_types": [
            {
              "name": "accuracy-r33",
              "priority": 1,
              "higher_is_better": true
            },
            { "name": "f1-r33", "higher_is_better": true },
            { "name": "accuracy-r50", "higher_is_better": true },
            { "name": "f1-r50", "higher_is_better": true },
            { "name": "accuracy-r00", "higher_is_better": true },
            { "name": "f1-r00", "higher_is_better": true }
          ],
          "user_config": {
            "user_script": "llmlingua2_bert_qdq_npu_meetingbank.py",
            "metric_func": "eval_token_classification",
            "metric_func_kwargs": {
              "model_name": "microsoft/llmlingua-2-bert-base-multilingual-cased-meetingbank"
            }
          }
        },
        {
          "name": "latency",
          "type": "latency",
          "data_config": "eval_data",
          "warmup_num": 2,
          "repeat_test_num": 10,
          "sub_types": [
            { "name": "avg", "warmup_num": 2, "repeat_test_num": 10 },
            { "name": "p75", "warmup_num": 2, "repeat_test_num": 10 },
            { "name": "p90", "warmup_num": 2, "repeat_test_num": 10 }
          ],
          "user_config": {
            "inference_settings": {
              "onnx": {
                "execution_provider": "QNNExecutionProvider",
                "session_options": {
                  "extra_session_config": {
                    "session.disable_cpu_ep_fallback": "0"
                  }
                },
                "provider_options": [
                  {
                    "htp_graph_finalization_optimization_mode": 3,
                    "htp_performance_mode": "burst"
                  }
                ]
              }
            }
          }
        }
      ]
    }
  },
  "passes": {
    "conversion": {
      "device": "cpu",
      "type": "OnnxConversion",
      "target_opset": 17,
      "use_dynamo_exporter": false,
      "save_as_external_data": true,
      "all_tensors_to_one_file": true
    },
    "to_fixed_shape": {
      "type": "DynamicToFixedShape",
      "dim_param": ["batch_size", "sequence_length"],
      "dim_value": [1, 512],
      "save_as_external_data": true,
      "all_tensors_to_one_file": true
    },
    "qnn_preprocess": {
      "type": "QNNPreprocess",
      "fuse_layernorm": true,
      "save_as_external_data": true,
      "all_tensors_to_one_file": true
    },
    "quantization": {
      "type": "OnnxStaticQuantization",
      "data_config": "calibration_data",
      "quant_preprocess": true,
      "activation_type": "QUInt16",
      "weight_type": "QUInt8",
      "save_as_external_data": true,
      "all_tensors_to_one_file": true
    }
  }
}
